{"version":3,"sources":["AppState/Store.js","AppState/actions.js","navbar.js","util/card.js","components/Home/home.js","util/error.js","components/CreateAccount/createaccount.js","components/Login/login.js","components/Deposit/deposit.js","components/Withdraw/withdraw.js","components/AllData/alldata.js","App.js","reportWebVitals.js","index.js"],"names":["Store","React","createContext","initialState","users","name","email","password","balance","currentUser","success","showError","reducer","state","action","type","payload","error","StoreProvider","props","useReducer","dispatch","actions","addUser","newUser","newUsers","push","logIn","credentials","find","element","alert","withdraw","amount","userIndex","findIndex","deposit","setSuccess","value","setError","useActions","Provider","children","NavBar","useContext","location","useLocation","className","href","id","pathname","Card","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","Home","src","alt","width","Error","marginTop","role","message","CreateAccount","useState","show","setShow","formik","useFormik","initialValues","onSubmit","values","console","log","onReset","validate","errors","test","length","handleSubmit","placeholder","onChange","handleChange","disabled","isValid","dirty","onClick","handleReset","Login","htmlFor","Deposit","parseFloat","setTimeout","isNaN","Withdraw","AllData","scope","map","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6d90b46.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport { useActions } from \"./actions\";\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  users:[\n    {\n      name:'abel',\n      email:'abel@mit.edu',\n      password:'secret',\n      balance:100\n    },\n    {\n      name:'fer',\n      email:'fer@gmail.com',\n      password:'secret',\n      balance:100\n    }\n  ],\n  currentUser: null,\n  success: false,\n  showError: false\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_USER\":\n      return { ...state, users: action.payload };\n    case \"LOGIN\":\n      return { ...state, currentUser: action.payload };\n    case \"UPDATE_USERS\":\n      return {...state, users: action.payload}\n    case \"UPDATE_USER\": \n      return {...state, currentUser: action.payload}\n    case \"SET_SUCCESS\":\n      return {...state, success: action.payload}\n    case \"SET_ERROR\":\n      return {...state, error: action.payload}\n    default:\n    break;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const actions = useActions(state, dispatch);\n  const value = { state, dispatch, actions };\n\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","/* eslint-disable no-console */\nimport { findIndex } from \"lodash\";\n\nexport const useActions = (state, dispatch) => {\n  \n  //CREATES A NEW USER\n  const addUser = newUser => {\n    let newUsers = [...state.users];\n    newUsers.push(newUser);\n    dispatch({\n      type: \"ADD_USER\",\n      payload: newUsers\n    });\n  };\n\n  //TRIES TO LOGIN WITH THE PROVIDED CREDENTIALS\n  const logIn = credentials => { \n   let currentUser = state.users.find(element => element.password === credentials.password && element.email === credentials.email);\n   if(currentUser) {\n    dispatch({\n      type: \"LOGIN\",\n      payload: {...currentUser}\n    });\n   }\n   else {\n     alert(\"login error, check your credentials\");\n   }\n  }\n\n  const withdraw = amount => {\n    let userIndex = findIndex(state.users, element => element.email === state.currentUser.email)\n    let newUsers = [...state.users];\n    newUsers[userIndex].balance = newUsers[userIndex].balance - amount;\n    dispatch({\n      type:\"UPDATE_USERS\",\n      payload: newUsers\n    });\n\n    dispatch({\n      type:\"UPDATE_USER\",\n      payload: {...state.currentUser, balance: state.currentUser.balance - amount}\n    });\n  }\n\n  const deposit = amount => {\n    let userIndex = findIndex(state.users, element => element.email === state.currentUser.email)\n    let newUsers = [...state.users];\n    newUsers[userIndex].balance = newUsers[userIndex].balance + amount;\n    dispatch({\n      type:\"UPDATE_USERS\",\n      payload: newUsers\n    });\n\n    dispatch({\n      type:\"UPDATE_USER\",\n      payload: {...state.currentUser, balance: state.currentUser.balance + amount}\n    });\n  }\n\n  const setSuccess = value => {\n    dispatch({\n      type:\"SET_SUCCESS\",\n      payload: value\n    });\n  }\n\n  const setError = value => {\n    dispatch({\n      type: \"SET_ERROR\",\n      payload: value\n    })\n  }\n\n\n  return {\n    addUser,\n    logIn,\n    withdraw,\n    deposit,\n    setSuccess,\n    setError\n  };\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {useContext} from 'react';\nimport { Store } from './AppState/Store';\nimport { useLocation } from 'react-router-dom'\nexport default function NavBar() { \n  const {state} = useContext(Store);\n  const location = useLocation();\n  return (\n    <>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#\">BadBank</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a className={location.pathname===\"/CreateAccount/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/CreateAccount/\">Create Account</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className={location.pathname===\"/login/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/login/\" aria-label=\"login-link\">{state.currentUser ? \"Profile\" : \"Login\"}</a>\n          </li>\n          {state.currentUser && <li className=\"nav-item\">\n            <a className={location.pathname===\"/deposit/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/deposit/\">Deposit</a>\n          </li>}\n          {state.currentUser && <li className=\"nav-item\">\n            <a className={location.pathname===\"/withdraw/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/withdraw/\">Withdraw</a>\n          </li>}\n          <li className=\"nav-item\">\n            <a className={location.pathname===\"/alldata/\" ? \"nav-link active\" : \"nav-link\"} href=\"#/alldata/\">AllData</a>\n          </li>          \n        </ul>\n      </div>\n    </nav>\n    </>\n  );\n}","export default function Card(props){\n  function classes(){\n    const bg  = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\n    const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\n    return 'card mb-3 ' + bg + txt;\n  }\n\n  return (\n    <div className={classes()} style={{maxWidth: \"18rem\"}}>\n      <div className=\"card-header\">{props.header}</div>\n      <div className=\"card-body\">\n        {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\n        {props.text && (<p className=\"card-text\">{props.text}</p>)}\n        {props.body}\n        {props.status && (<div id='createStatus'>{props.status}</div>)}\n      </div>\n    </div>      \n  );    \n}","import Card from '../../util/card';\nexport default function Home() {\n\n  return (\n    <Card\n    bgcolor=\"secondary\"\n    header=\"Welcome to the bank\"\n    body={\n      <>\n        <p>For all your banking needs</p>\n        <div>\n          <img src='./bankicon.png' alt=\"wat\" width=\"100%\"/>\n        </div>\n      </>\n    }\n    />\n  )\n}","export default function Error(props) { \n  return (<div  style={{marginTop: \"10px\"}} className=\"alert alert-danger\" role=\"alert\">\n  {props.message}\n</div>)\n}","import {useContext, useState} from 'react';\nimport Card from '../../util/card';\nimport {Store} from \"../../AppState/Store\";\nimport { useFormik } from 'formik';\nimport Error from '../../util/error';\n\nexport default function CreateAccount() {\n  const [show, setShow] = useState(true);\n  // const [status, setStatus]     = useState('');\n  const {actions} = useContext(Store)\n\n  const formik = useFormik({\n    initialValues: {\n      name:'',\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n     console.log(values);\n     actions.addUser({...values, balance: 0});\n     alert(\"success!\")\n     setShow(false);\n    },\n    onReset: values => {\n      setShow(true);\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.name) errors.name = \"Field required\";\n      if(!values.email) errors.email = \"Field required\";\n      if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) errors.email = 'Invalid Email';\n      if(!values.password) errors.password = \"Field required\";\n      if(values.password.length < 8) errors.password = \"Password needs to be more than 8 characters\";\n      return errors;\n    }\n  })\n\n  return (\n    <>\n    <h3>CREATE ACCOUNT</h3>\n    <Card\n      bgcolor=\"primary\"\n      // status={status}\n      body={show ? (  \n        <form onSubmit={formik.handleSubmit}>\n          Name<br/>\n          <input type=\"input\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter name\" onChange={formik.handleChange} value={formik.values.name}/><br/>\n          {formik.errors.name ? <Error message={formik.errors.name}/> : null}\n          Email address<br/>\n          <input type=\"input\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={formik.handleChange} value={formik.values.email}/><br/>\n          {formik.errors.email ? <Error message={formik.errors.email}/> : null}\n          Password<br/>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Enter password\" onChange={formik.handleChange} value={formik.values.password}/><br/>\n          {formik.errors.password ? <Error message={formik.errors.password}/> : null}\n          <button type=\"submit\" className=\"btn btn-light\" id=\"submitBtn\" disabled={!(formik.isValid && formik.dirty)}>Create Account</button>\n        </form>\n      ):(\n        <>\n        <h5>Success</h5>\n        <button type=\"submit\" className=\"btn btn-light\" onClick={formik.handleReset}>Add another account</button>\n        </>\n      )}\n    />\n    </>\n  )\n}","import {useContext} from 'react';\nimport Card from '../../util/card';\nimport {useFormik} from \"formik\";\nimport { Store } from '../../AppState/Store';\nimport Error from '../../util/error';\n\nexport default function Login() {\n  // TODO: add a const called formik assigned to useFormik()\n  const {state,actions} = useContext(Store);\n  \n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n     actions.logIn(values);\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.email) errors.email = \"Field required\";\n      else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) errors.email = 'Username should be an email';\n      if(!values.password) errors.password = \"Field required\";\n      return errors;\n    }\n  })\n  return (\n    <Card\n    bgcolor=\"primary\"\n    header={state.currentUser ? \"Profile\" : \"Login\"}\n    body= {\n      !state.currentUser \n      ? <div>\n        <form onSubmit={formik.handleSubmit} data-testid=\"login-form\">\n          <div className=\"mb-3\">\n            <div>Email</div>\n            <input type=\"text\" className=\"form-control\" id=\"emailField\" name=\"email\" onChange={formik.handleChange} value={formik.values.email} aria-label=\"email-field\"/>\n            {formik.errors.email ? <Error id=\"emailError\" message={formik.errors.email}/> : null}\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"pswField\">Password</label>\n            <input type=\"password\" className=\"form-control\" id=\"pswField\" name=\"password\" onChange={formik.handleChange} value={formik.values.password} aria-label=\"password-field\"/>\n            {formik.errors.password ? <Error id=\"emailError\" message={formik.errors.password}/> : null}\n          </div>\n          <button type=\"submit\" className=\"btn btn-secondary\" id=\"submitBtn\" aria-label=\"login-button\">Login</button>\n        </form>\n      </div> \n      : <div>\n          <div id=\"login-message\">Login Succesful!</div>\n          <br/> Hello,{state.currentUser.name}\n        </div>\n    }\n    />\n\n  );\n}","import {useContext} from 'react';\nimport {Store} from \"../../AppState/Store\";\nimport Card from '../../util/card';\nimport {useFormik} from \"formik\";\nimport Error from '../../util/error';\nexport default function Deposit() {\n  const {state, actions} = useContext(Store)\n\n  const formik = useFormik({\n    initialValues: {\n      amount: 0\n    },\n    onSubmit: values => {\n      let amount = parseFloat(values.amount);\n      actions.deposit(amount);\n      actions.setSuccess(true)\n      setTimeout(()=>{\n        actions.setSuccess(false);\n      },3000)\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.amount || values.amount === \"\") errors.amount = \"Field required\";\n      if(values.amount !== \"\" && isNaN(parseFloat(values.amount))) errors.amount = \"Just Numbers allowed\";\n      if(values.amount < 0) errors.amount = \"Negative Numbers not allowed\";\n      return errors;\n    }\n  })\n\n  return (\n    <>\n    <h3>DEPOSIT</h3>\n    <Card\n      bgcolor=\"secondary\"\n      body= {\n        <>\n        {state.currentUser && <form onSubmit={formik.handleSubmit} data-testid=\"deposit-form\">\n          <div className=\"mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">Balance: </div>\n                <div className=\"col\" data-testid=\"user-balance\">{state.currentUser.balance}</div>\n            </div>\n            <div className=\"amount-container\">\n                <div className=\"row\">\n                  <h4>Deposit Amount</h4>\n                </div>\n                <div className=\"fields\">\n                  <input type=\"text\" className=\"form-control\" id=\"amountField\" name=\"amount\" onChange={formik.handleChange} value={formik.values.amount} aria-label=\"deposit-field\"/>\n                  {formik.errors.amount ? <Error id=\"emailError\" message={formik.errors.amount}/> : null}\n                  <button type=\"submit\" className=\"btn btn-primary\" id=\"submitBtn\" disabled={!(formik.isValid && formik.dirty)}>Deposit</button>\n                </div>\n            </div>\n          </div>\n        </form>}\n        {!state.currentUser && \n          <div>You can't see this content without being logged in.</div>\n        }\n        </>\n      }\n    />\n    {state.success && <div className=\"alert alert-success\" role=\"alert\">\n      Succes!\n    </div>}\n    </>\n    \n  )\n  \n}","import {useContext} from 'react';\nimport {Store} from \"../../AppState/Store\";\nimport Card from '../../util/card';\nimport {useFormik} from \"formik\";\nimport Error from \"../../util/error\";\n\nexport default function Withdraw() {\n  const {state, actions} = useContext(Store)\n\n  const formik = useFormik({\n    initialValues: {\n      amount: 0\n    },\n    onSubmit: values => {\n      console.log(values);\n      if(values.amount <= state.currentUser.balance) {\n        let amount = parseFloat(values.amount);\n        actions.withdraw(amount);\n        actions.setSuccess(true)\n        setTimeout(()=>{\n          actions.setSuccess(false);\n        },3000)\n      }\n      else { \n        actions.setError(true)\n        setTimeout(()=>{\n          actions.setError(false);\n        },3000)\n      }\n    },\n    validate: values => {\n      let errors = {};\n      if(!values.amount || values.amount === \"\") errors.amount = \"Field required\";\n      if(values.amount !== \"\" && isNaN(parseFloat(values.amount))) errors.amount = \"Just Numbers allowed\";\n      if(values.amount < 0) errors.amount = \"Negative Numbers not allowed\";\n      return errors;\n    }\n  })\n\n  return (\n    <>\n    <h3>WITHDRAW</h3>\n    <Card\n      bgcolor=\"secondary\"\n      body= {\n        <>\n        {state.currentUser && <form onSubmit={formik.handleSubmit} data-testid=\"withdraw-form\">\n          <div className=\"mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">Balance: </div>\n                <div className=\"col\" data-testid=\"user-balance\">{state.currentUser.balance}</div>\n            </div>\n            <div className=\"amount-container\">\n                <div className=\"row\">\n                  <h4>Withdraw Amount</h4>\n                </div>\n                <div className=\"fields\">\n                  <input type=\"text\" className=\"form-control\" id=\"amountField\" name=\"amount\" onChange={formik.handleChange} value={formik.values.amount} aria-label=\"withdraw-field\"/>\n                  {formik.errors.amount ? <Error id=\"emailError\" message={formik.errors.amount}/> : null}\n                  <button type=\"submit\" className=\"btn btn-primary\" id=\"submitBtn\" disabled={!(formik.isValid && formik.dirty)}>Withdraw</button>\n                </div>\n            </div>\n          </div>\n        </form>}\n        {!state.currentUser && \n          <div>You can't see this content without being logged in.</div>\n        }\n        </>\n      }\n    />\n    {state.success && <div className=\"alert alert-success\" role=\"alert\">\n      Succes!\n    </div>}\n    {state.error && <Error message=\"transaction failed\"/>}\n    </>\n    \n    \n  )\n}","import {useContext} from 'react';\nimport {Store} from \"../../AppState/Store\";\nexport default function AllData() {\n  const { state } = useContext(Store)\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Password</th>\n          <th scope=\"col\">Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        {state.users.map(element=> {\n          return <tr>\n          <td>{element.email}</td>\n          <td>{element.name}</td>\n          <td>{element.password}</td>\n          <td>{element.balance}</td>\n        </tr>\n        })}\n      </tbody>\n  </table>\n  )\n}","import NavBar from './navbar';\nimport {Route, HashRouter} from 'react-router-dom';\nimport Home from './components/Home/home';\nimport CreateAccount from './components/CreateAccount/createaccount';\nimport Login from './components/Login/login';\nimport Deposit from './components/Deposit/deposit';\nimport Withdraw from './components/Withdraw/withdraw';\nimport AllData from './components/AllData/alldata';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\n\nfunction App() {\n  return (\n   <HashRouter>\n    <div className=\"container-fluid\">\n    <NavBar />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/CreateAccount/\" component={CreateAccount} />\n      <Route path=\"/login/\" component={Login} />\n      <Route path=\"/deposit/\" component={Deposit}/>\n      <Route path=\"/withdraw/\" component={Withdraw} />\n      <Route path=\"/alldata/\" component={AllData} />\n    </div>\n   </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import UserContext from './util/context';\nimport {StoreProvider} from './AppState/Store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}